
services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "pg_isready","-U", "myuser", "-d", "inventory"]
      interval: 10s
      timeout: 3s
      retries: 3

  ms_inventory:
    build:
      context: ./ms_inventory
      dockerfile: Dockerfile
    container_name: ms_inventory
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - .env  
    environment:
      - TZ=Asia/Jerusalem
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    volumes:
      - ./ms_inventory:/app

    networks:
      - kafka-network
    # command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    command: python main.py
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    
  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    ports:
      - "8080:8080"
    networks:
      - kafka-network
    


networks:
  kafka-network:
    driver: bridge

volumes:
  postgres_data:
